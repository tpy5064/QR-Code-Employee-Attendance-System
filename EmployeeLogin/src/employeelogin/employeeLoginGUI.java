/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employeelogin;

import java.io.IOException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.concurrent.ExecutionException;
import javax.swing.SwingWorker;

/**
 *
 * @author AndrewYang
 */
public class employeeLoginGUI extends javax.swing.JFrame {

    /**
     * Creates new form employeeLoginGUI
     */
    public employeeLoginGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginScan = new javax.swing.JFrame();
        employeePanel = new javax.swing.JPanel();
        employeeLoginButton = new javax.swing.JButton();
        employeeLogoutButton = new javax.swing.JButton();

        javax.swing.GroupLayout loginScanLayout = new javax.swing.GroupLayout(loginScan.getContentPane());
        loginScan.getContentPane().setLayout(loginScanLayout);
        loginScanLayout.setHorizontalGroup(
            loginScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        loginScanLayout.setVerticalGroup(
            loginScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        employeePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 3, 13))); // NOI18N

        employeeLoginButton.setText("Login");
        employeeLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeLoginButtonActionPerformed(evt);
            }
        });

        employeeLogoutButton.setText("Logout");
        employeeLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeLogoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout employeePanelLayout = new javax.swing.GroupLayout(employeePanel);
        employeePanel.setLayout(employeePanelLayout);
        employeePanelLayout.setHorizontalGroup(
            employeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(employeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(employeeLogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeLoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        employeePanelLayout.setVerticalGroup(
            employeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeeLoginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(employeeLogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * The code used for the login and logout functions have been adapted from 
     * Sarxos's QR Code example project found at: 
     * https://github.com/sarxos/webcam-capture/tree/master/webcam-capture-examples/webcam-capture-qrcode
     * @param evt 
     */
    private void employeeLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeLoginButtonActionPerformed
            SwingWorker<String, Void> worker = new SwingWorker<String, Void>() {
            FileData fd = new FileData();

            @Override
            public String doInBackground() {
                try (QRScannerMain qr = new QRScannerMain()) {
                    String currentSession = qr.getResult();
                    return currentSession;
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
                return "";
            }

            @Override
            public void done() {
                String timeStamp = new SimpleDateFormat("HH:mm:ss yyyy/MM/dd").format(new Date());
                
                try {
                    
                    String currentSession = get();
                    
                    if (fd.employeeExists(currentSession)) {
                        
                        WriteFile data = new WriteFile(fd.getFolder() + currentSession, true);
                        data.writeToFile(timeStamp + " in" + "\n");
                        showMessage(currentSession + ", you have successfully signed in!");

                    } else {
                        
                        showMessage("You are not entered in the system, ask"
                                + " an admin to do so");
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    showMessage("QR Scanner Error!");
                } catch (IOException ex) {
                    System.out.println("Error saving to file.");
                }

            }

        };
        worker.execute();
        pack();
        setVisible(true);

    }//GEN-LAST:event_employeeLoginButtonActionPerformed

    private void employeeLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeLogoutButtonActionPerformed
        SwingWorker<String, Void> worker = new SwingWorker<String, Void>() {
            FileData fd = new FileData();

            @Override
            public String doInBackground() {
                try (QRScannerMain qr = new QRScannerMain()) {
                    String currentSession = qr.getResult();
                    return currentSession;
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
                return "";
            }

            @Override
            public void done() {
                String timeStamp = new SimpleDateFormat("HH:mm:ss yyyy/MM/dd").format(new Date());
                try {
                    String currentSession = get();
                    if (fd.employeeExists(currentSession)) {
                        WriteFile data = new WriteFile(fd.getFolder() + currentSession, true);
                        data.writeToFile(timeStamp + " out" + "\n");
                        showMessage(currentSession + ", you have successfully signed out!");

                    } else {
                        showMessage("You are not entered in the system, ask"
                                + " an admin to do so");
                    }
                } catch (InterruptedException | ExecutionException ex) {
                    ex.printStackTrace();
                } catch (IOException ex) {
                    System.out.println("Error saving to file.");
                }

            }

        };
        worker.execute();
        pack();
        setVisible(true);
    }//GEN-LAST:event_employeeLogoutButtonActionPerformed

    private void showMessage(String text) {
        JOptionPane.showMessageDialog(null, text);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employeeLoginGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employeeLoginGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employeeLoginGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employeeLoginGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employeeLoginGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton employeeLoginButton;
    private javax.swing.JButton employeeLogoutButton;
    private javax.swing.JPanel employeePanel;
    private javax.swing.JFrame loginScan;
    // End of variables declaration//GEN-END:variables
}
